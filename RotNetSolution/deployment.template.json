{
  "$schema-template": "2.0.0",
  "modulesContent": {
    "$edgeAgent": {
      "properties.desired": {
        "schemaVersion": "1.0",
        "runtime": {
          "type": "docker",
          "settings": {
            "minDockerVersion": "v1.25",
            "loggingOptions": "",
            "registryCredentials": {
              "bootcampcr": {
                "username": "$CONTAINER_REGISTRY_USERNAME_bootcampcr",
                "password": "$CONTAINER_REGISTRY_PASSWORD_bootcampcr",
                "address": "bootcampcr.azurecr.io"
              }
            }
          }
        },
        "systemModules": {
          "edgeAgent": {
            "type": "docker",
            "settings": {
              "image": "mcr.microsoft.com/azureiotedge-agent:1.0",
              "createOptions": {}
            }
          },
          "edgeHub": {
            "type": "docker",
            "status": "running",
            "restartPolicy": "always",
            "settings": {
              "image": "mcr.microsoft.com/azureiotedge-hub:1.0",
              "createOptions": {
                "HostConfig": {
                  "PortBindings": {
                    "5671/tcp": [
                      {
                        "HostPort": "5671"
                      }
                    ],
                    "8883/tcp": [
                      {
                        "HostPort": "8883"
                      }
                    ],
                    "443/tcp": [
                      {
                        "HostPort": "443"
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "modules": {
          "rotnetmodule": {
            "version": "1.0",
            "type": "docker",
            "status": "running",
            "restartPolicy": "always",
            "settings": {
              "image": "${MODULES.rotnetmodule}",
              "createOptions": {
                "HostConfig": {
                  "PortBindings": {},
                  "Binds": [
                    "/usr/lib/aarch64-linux-gnu/:/usr/lib/aarch64-linux-gnu-override/",
                    "/usr/lib/aarch64-linux-gnu/tegra:/usr/lib/aarch64-linux-gnu-override/tegra",
                    "/usr/local/cuda:/usr/local/cuda",
                    "/usr/local/cuda-10.0:/usr/local/cuda-10.0",
                    "/dev:/dev"
                  ],
                  "NetworkMode": "Host",
                  "Devices": [
                    {
                      "PathOnHost": "/dev/nvhost-ctrl",
                      "PathInContainer": "/dev/nvhost-ctrl",
                      "CgroupPermissions": "rwm"
                    },
                    {
                      "PathOnHost": "/dev/nvhost-ctrl-gpu",
                      "PathInContainer": "/dev/nvhost-ctrl-gpu",
                      "CgroupPermissions": "rwm"
                    },
                    {
                      "PathOnHost": "/dev/nvhost-vic",
                      "PathInContainer": "/dev/nvhost-vic",
                      "CgroupPermissions": "rwm"
                    },
                    {
                      "PathOnHost": "/dev/nvhost-prof-gpu",
                      "PathInContainer": "/dev/nvhost-prof-gpu",
                      "CgroupPermissions": "rwm"
                    },
                    {
                      "PathOnHost": "/dev/nvmap",
                      "PathnContainer": "/dev/nvmap",
                      "CgroupPermissions": "rwm"
                    },
                    {
                      "PathOnHost": "/dev/nvhost-gpu",
                      "PathInContainer": "/dev/nvhost-gpu",
                      "CgroupPermissions": "rwm"
                    },
                    {
                      "PathOnHost": "/dev/nvhost-as-gpu",
                      "PathInContainer": "/dev/nvhost-as-gpu",
                      "CgroupPermissions": "rwm"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "$edgeHub": {
      "properties.desired": {
        "schemaVersion": "1.0",
        "routes": {
          "rotnetmoduleToIoTHub": "FROM /messages/modules/rotnetmodule/outputs/* INTO $upstream"
        },
        "storeAndForwardConfiguration": {
          "timeToLiveSecs": 7200
        }
      }
    }
  }
}